worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

events {
    worker_connections  1024;
}
rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application show {
            live on;
            hls on;
            hls_path /home/ubuntu/hls/;
            hls_fragment 3;
            hls_playlist_length 60;
            deny play all;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    aio on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen 8000;

        location / {
            add_header 'Cache-Control' 'no-cache';

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /home/ubuntu/;
        }
    }
}
# rtmp {
#     server {
#         listen 1935;
#         chunk_size 4096;
#
#         application live {
#             live on;
#             exec_push ffmpeg -i rtmp://localhost:1935/$app/$name -async 1 -vsync -1 -c copy -f flv rtmp://localhost:1935/hls/$name;
#             drop_idle_publisher 10s;
#         }
#
#         application hls {
#             live on;
#             hls on;
#             hls_fragment 10s;
#             hls_playlist_length 10;
#             hls_path /tmp/hls;
#             deny play all;
#         }
#     }
# }
#
# http {
#     server {
#         listen 8000;
#         root /tmp;
#         location /hls {
#             types {
#                  application/vnd.apple.mpegurl m3u8;
#                  video/mp2t ts;
#             }
#         }
#     }
# }
